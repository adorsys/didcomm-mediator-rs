apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-deployment
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Release.Name }}-container
          image: {{ .Values.mediator.image.repository }}:{{ .Values.mediator.image.tag }}
          imagePullPolicy: {{ .Values.mediator.image.pullPolicy }}
          ports:
            - containerPort: 8080
          env:
            - name: SERVER_LOCAL_PORT
              valueFrom:
                configMapKeyRef:
                  key: SERVER_LOCAL_PORT
                  name: {{ .Values.mediator.configmap.name }}

            - name: MONGO_DBN
              valueFrom:
                configMapKeyRef:
                  key: MONGO_DBN
                  name: {{ .Values.mediator.configmap.name }}

            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.externalSecret.spec.target.name }}
                  key: mongodb-passwords 

            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                configMapKeyRef:
                  key: MONGO_INITDB_ROOT_USERNAME
                  name: {{ .Values.mediator.configmap.name }}

            - name: MONGO_HOST
              value: {{ .Release.Name }}-mongodb-service

            - name: MONGO_URI
              value: "mongodb://$(MONGO_INITDB_ROOT_USERNAME):$(MONGO_INITDB_ROOT_PASSWORD)@mongodb-service.didcomm-mediator.svc.cluster.local:27017/$(MONGO_DBN)"
            - name: SERVER_PUBLIC_DOMAIN
              valueFrom:
                configMapKeyRef:
                  key: SERVER_PUBLIC_DOMAIN
                  name: {{ .Values.mediator.configmap.name }}

          volumeMounts:
            - name: invitation-storage
              mountPath: /didcomm-mediator/storage
            - name: aws-credentials-volume
              mountPath: /root/.aws
              readOnly: true

      volumes:
        - name: invitation-storage
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-deployment-pvc
        - name: aws-credentials-volume
          secret:
            secretName: aws-credentials-secret
