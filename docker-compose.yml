version: '3.8'

services:
  # prometheus: 
  #   image: prom/prometheus
  #   container_name: prometheus
  #   ports:
  #     - 9090:9090
  #   command: --config.file=/etc/prometheus/prometheus.yml
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yml
  #     - ./alert.rules.yml:/etc/prometheus/alert.rules.yml
  #   extra_hosts:
  #     - "host.docker.internal:host-gateway"
  #   restart: always
  #   networks:
  #     - mediator-network

  # grafana:
  #   image: grafana/grafana
  #   container_name: grafana
  #   ports:
  #     - 3001:3000
  #   volumes:
  #     - grafana-storage:/var/lib/grafana
  #   depends_on:
  #     - prometheus
  #   restart: always
  #   networks:
  #     - mediator-network

  # alertmanager:
  #   image: prom/alertmanager
  #   container_name: alertmanager
  #   ports:
  #     - 9093:9093
  #   volumes:
  #     - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml
  #   command:
  #     - --config.file=/etc/alertmanager/alertmanager.yml
  #   restart: always
  #   depends_on:
  #     - prometheus
  #   networks:
  #     - mediator-network

  # discord-alerts:
  #   image: benjojo/alertmanager-discord
  #   container_name: discord-alerts
  #   restart: always
  #   environment:
  #     - DISCORD_WEBHOOK=${DISCORD_WEBHOOK_URL}
  #   ports:
  #     - 9091:9094
  #   networks:
  #     - mediator-network

  # node_exporter:
  #   image: prom/node-exporter
  #   container_name: node_exporter
  #   ports:
  #     - "9100:9100"
  #   volumes:
  #     - /proc:/host/proc:ro
  #     - /sys:/host/sys:ro
  #     - /run/udev:/run/udev:ro
  #     - /:/rootfs:ro
  #   command:
  #     - '--path.procfs=/host/proc'
  #     - '--path.sysfs=/host/sys'
  #     - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
  #   restart: always
  #   networks:
  #     - mediator-network

  mediator:
    build:
      context: .
    container_name: didcomm-mediator
    ports:
      - "3000:3000"
    env_file:
      - .env  
    depends_on:
      - mongodb
    networks:
      - mediator-network

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - mediator-network
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  grafana-storage: 
  mongo-data:

networks:
  mediator-network:
    driver: bridge
